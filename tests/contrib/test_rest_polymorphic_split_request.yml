openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /persons/:
    get:
      operationId: persons_list
      tags:
      - persons
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
          description: ''
    post:
      operationId: persons_create
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
  /persons/{id}/:
    get:
      operationId: persons_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - persons
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    put:
      operationId: persons_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    patch:
      operationId: persons_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - persons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPersonRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPersonRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPersonRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: ''
    delete:
      operationId: persons_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this person.
        required: true
      tags:
      - persons
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    LegalPerson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          maxLength: 30
        address:
          type: string
          maxLength: 30
        board:
          type: array
          items:
            $ref: '#/components/schemas/Person'
          readOnly: true
      required:
      - address
      - board
      - company_name
      - id
    LegalPersonRequest:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 30
        address:
          type: string
          maxLength: 30
      required:
      - address
      - company_name
    NaturalPerson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        address:
          type: string
          maxLength: 30
        supervisor_id:
          type: integer
          nullable: true
      required:
      - address
      - first_name
      - id
      - last_name
      - supervisor_id
    NaturalPersonRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        address:
          type: string
          maxLength: 30
        supervisor_id:
          type: integer
          nullable: true
      required:
      - address
      - first_name
      - last_name
      - supervisor_id
    NomadicPerson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
          readOnly: true
          maxLength: 30
      required:
      - address
      - id
    PatchedLegalPersonRequest:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 30
        address:
          type: string
          maxLength: 30
    PatchedNaturalPersonRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        address:
          type: string
          maxLength: 30
        supervisor_id:
          type: integer
          nullable: true
    PatchedPersonRequest:
      oneOf:
      - $ref: '#/components/schemas/PatchedLegalPersonRequest'
      - $ref: '#/components/schemas/PatchedNaturalPersonRequest'
      discriminator:
        propertyName: resourcetype
        mapping:
          legal: '#/components/schemas/PatchedLegalPersonRequest'
          natural: '#/components/schemas/PatchedNaturalPersonRequest'
    Person:
      oneOf:
      - $ref: '#/components/schemas/LegalPerson'
      - $ref: '#/components/schemas/NaturalPerson'
      - $ref: '#/components/schemas/NomadicPerson'
      discriminator:
        propertyName: resourcetype
        mapping:
          legal: '#/components/schemas/LegalPerson'
          natural: '#/components/schemas/NaturalPerson'
          nomadic: '#/components/schemas/NomadicPerson'
    PersonRequest:
      oneOf:
      - $ref: '#/components/schemas/LegalPersonRequest'
      - $ref: '#/components/schemas/NaturalPersonRequest'
      discriminator:
        propertyName: resourcetype
        mapping:
          legal: '#/components/schemas/LegalPersonRequest'
          natural: '#/components/schemas/NaturalPersonRequest'
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
